<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Dashboard - Finance Tracker</title>
  <link rel="stylesheet" href="/css/style.css">

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@200..800&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet"> 

  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>

  <header>
    <div class="header-left">
      <h1>Welcome, <%= user.username %>!</h1>
      <p>Dashboard</p>
    </div>

    <div class="header-right">
      <div class="header-button">
        <img src="/edit.png" id="editProfileBtn">
      </div>
      <% if (user.role === 'admin') { %>
        <div class="header-button">
          <a href="/admin">
            <img src="/admin.png" id="editProfileBtn">
          </a>
        </div>
      <% } %>
      <div class="header-button">
        <a href="/logout">
          <img src="/exit.png" id="editProfileBtn">
        </a>      
      </div>  
    </div>
  </header> 

  <div class="content">

  <div class="sidebar">
    <!-- Pie Chart -->
    <h4>Exspenses/Incomes</h4>
    <section class="chart-container">
      <canvas id="pieChart"></canvas>
    </section>
  </div>

  <div class="main">

  <!-- Stats -->
  <section class="stats">
    <div class="stat-card">
      <img src="/wallet.png">
      <h4>CURRENT BALANCE</h4>
      <p style="color: #1579FB;">$ <%= currentBalance %></p>
    </div>
    <div class="stat-card">
      <img src="/wallet-2.png">
      <h4>TOTAL EXSPENSE</h4>
      <p>$ <%= totalExpense.toFixed(2) %></p>
    </div>
    <div class="stat-card">
      <img src="/wallet-3.png">
      <h4>TOTAL INCOME</h4>
      <p>$ <%= totalIncome.toFixed(2) %></p>
    </div>
  </section>

  <!-- Transactions Section -->
  <section class="transactions">
    <div class="transactions-header">
      <h2>Transactions</h2>
      <div class="transaction-container">
        <div class="filter-container">
          <button id="filter-button"><img src="/filter.png">Filter</button>
          <div id="filter-dropdown" class="dropdown-content">
            <label for="filter">Filter:</label>
            <select id="filter">
              <option value="all" selected>All</option>
              <option value="income">Income</option>
              <option value="expense">Expense</option>
            </select>
          </div>
        </div>
        <button id="addTransactionBtn"><img src="/plus.png">Add</button>
      </div>
    </div>

    <table id="transactionsTable">
      <thead>
        <tr>
          <th>Title</th>
          <th>Description</th>
          <th>Type</th>
          <th>Amount</th>
          <th>Date</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% transactions.forEach(function(tx) { %>
          <tr data-type="<%= tx.type %>">
            <td><%= tx.title %></td>
            <td><%= tx.description %></td>
            <td class="<%= tx.type %>"><%= tx.type === 'income' ? 'Income' : 'Expense' %></td>
            <td class="amount <%= tx.type %>">
              <%= tx.type === 'income' ? '+' : '-' %>$<%= tx.amount.toFixed(2) %>
            </td>
            <td><%= new Date(tx.date).toLocaleDateString() %></td>
            <td>
              <button class="editBtn"
                      data-id="<%= tx._id %>"
                      data-title="<%= tx.title %>"
                      data-description="<%= tx.description %>"
                      data-amount="<%= tx.amount %>"
                      data-type="<%= tx.type %>">
                Edit
              </button>
              <form class="deleteForm" action="/transaction/delete/<%= tx._id %>" method="POST" style="display:inline;">
                <button type="button" class="deleteBtn">Delete</button>
              </form>
            </td>
          </tr>
        <% }); %>
      </tbody>
    </table>
  </section>

  <!-- Modal for Adding Transaction -->
  <div id="addModal" class="modal">
    <div class="modal-content">
      <span class="close" id="addClose">&times;</span>
      <h2>Add Transaction</h2>
      <div class="form-container">
        <form action="/transaction" method="POST">
          <label>Title:</label>
          <input type="text" name="title" required>
          <label>Description:</label>
          <textarea name="description"></textarea>
          <label>Amount ($):</label>
          <input type="number" step="0.01" name="amount" required>
          <label>Type:</label>
          <select name="type" required>
            <option value="income">Income</option>
            <option value="expense">Expense</option>
          </select>
          <button type="submit">Add</button>
        </form>
      </div>
    </div>
  </div>

  <!-- Modal for Editing Transaction -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <span class="close" id="editClose">&times;</span>
      <h2>Edit Transaction</h2>
      <div class="form-container">
        <form id="editForm" method="POST">
          <label>Title:</label>
          <input type="text" name="title" id="editTitle" required>
          <label>Description:</label>
          <textarea name="description" id="editDescription"></textarea>
          <label>Amount ($):</label>
          <input type="number" step="0.01" name="amount" id="editAmount" required>
          <label>Type:</label>
          <select name="type" id="editType" required>
            <option value="income">Income</option>
            <option value="expense">Expense</option>
          </select>
          <button type="submit">Save</button>
        </form>
      </div>
    </div>
  </div>

  <!-- Modal for Editing Profile -->
  <div id="profileModal" class="modal">
    <div class="modal-content">
      <span class="close" id="profileClose">&times;</span>
      <h2>Edit Profile</h2>
      <% if (typeof profileError !== 'undefined' && profileError) { %>
        <p id="profileError" class="error"><%= profileError %></p>
      <% } %>
      <div class="form-container">
        <form action="/users/profile/update" method="POST">
          <label>Username:</label>
          <input type="text" name="username" value="<%= user.username %>" required>
          <label>Email:</label>
          <input type="email" name="email" value="<%= user.email %>" required>
          <label>Old Password (if changing):</label>
          <input type="password" name="oldPassword">
          <label>New Password:</label>
          <input type="password" name="newPassword">
          <label>Confirm New Password:</label>
          <input type="password" name="confirmNewPassword">
          <button type="submit">Save</button>
        </form>
      </div>
    </div>
  </div>

  <% if (typeof profileModalOpen !== 'undefined' && profileModalOpen) { %>
    <script>
      // Keep the profile modal open if profileModalOpen flag is set
      document.getElementById('profileModal').style.display = 'block';
    </script>
  <% } %>

  <script>
    // When the profile modal's close button is clicked, redirect to '/dashboard'
    document.getElementById('profileClose').onclick = () => {
      window.location.href = '/dashboard';
    };
  </script>

  <!-- Modal for Deletion Confirmation -->
  <div id="deleteModal" class="modal">
    <div class="modal-content">
      <span class="close" id="deleteClose">&times;</span>
      <h2>Confirm Deletion</h2>
      <p>Are you sure you want to delete this transaction?</p>
      <button id="confirmDeleteBtn">Yes, Delete</button>
      <button id="cancelDeleteBtn">Cancel</button>
    </div>
  </div>
</div>
</div>

  <script>
    // Pie Chart Initialization
    const ctx = document.getElementById('pieChart').getContext('2d');
    const pieChart = new Chart(ctx, {
      type: 'pie',
      data: {
        labels: ['Income', 'Expense'],
        datasets: [{
          data: [<%= totalIncome %>, <%= totalExpense %>],
          backgroundColor: ['#4CAF50', '#F44336']
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false
      }
    });

    // Modal for Adding Transaction
    const addModal = document.getElementById('addModal');
    const addBtn = document.getElementById('addTransactionBtn');
    const addClose = document.getElementById('addClose');
    addBtn.onclick = () => { addModal.style.display = 'block'; }
    addClose.onclick = () => { addModal.style.display = 'none'; }

    // Modal for Editing Transaction
    const editModal = document.getElementById('editModal');
    const editClose = document.getElementById('editClose');
    const editForm = document.getElementById('editForm');
    const editTitle = document.getElementById('editTitle');
    const editDescription = document.getElementById('editDescription');
    const editAmount = document.getElementById('editAmount');
    const editType = document.getElementById('editType');

    document.querySelectorAll('.editBtn').forEach(button => {
      button.addEventListener('click', function() {
        const id = this.getAttribute('data-id');
        editTitle.value = this.getAttribute('data-title');
        editDescription.value = this.getAttribute('data-description');
        editAmount.value = this.getAttribute('data-amount');
        editType.value = this.getAttribute('data-type');
        // Set the action for editing (note: route is /transaction/edit/:id)
        editForm.action = '/transaction/edit/' + id;
        editModal.style.display = 'block';
      });
    });
    editClose.onclick = () => { editModal.style.display = 'none'; }

    // Modal for Editing Profile
    const profileModal = document.getElementById('profileModal');
    const editProfileBtn = document.getElementById('editProfileBtn');
    const profileClose = document.getElementById('profileClose');
    editProfileBtn.onclick = () => { profileModal.style.display = 'block'; }
    profileClose.onclick = () => { profileModal.style.display = 'none'; }

    // Modal for Deletion Confirmation
    let deleteFormToSubmit = null;
    document.querySelectorAll('.deleteBtn').forEach(button => {
      button.addEventListener('click', function() {
        deleteFormToSubmit = this.closest('form.deleteForm');
        document.getElementById('deleteModal').style.display = 'block';
      });
    });
    const deleteModal = document.getElementById('deleteModal');
    const deleteClose = document.getElementById('deleteClose');
    const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
    const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
    confirmDeleteBtn.onclick = () => {
      if (deleteFormToSubmit) {
        deleteFormToSubmit.submit();
      }
    };
    cancelDeleteBtn.onclick = () => {
      deleteModal.style.display = 'none';
      deleteFormToSubmit = null;
    };
    deleteClose.onclick = () => {
      deleteModal.style.display = 'none';
      deleteFormToSubmit = null;
    };

    // Close modals when clicking outside
    window.onclick = function(event) {
      if (event.target == addModal) { addModal.style.display = 'none'; }
      if (event.target == editModal) { editModal.style.display = 'none'; }
      if (event.target == profileModal) { profileModal.style.display = 'none'; }
      if (event.target == deleteModal) { deleteModal.style.display = 'none'; }
    };

    // Filter Transactions
    document.getElementById('filter').addEventListener('change', function() {
      const filter = this.value;
      const rows = document.querySelectorAll('#transactionsTable tbody tr');
      rows.forEach(row => {
        row.style.display = (filter === 'all' || row.getAttribute('data-type') === filter) ? '' : 'none';
      });
    });

    document.getElementById('filter-button').addEventListener('click', function() {
    const dropdown = document.getElementById('filter-dropdown');
      if (dropdown.style.display === 'none' || dropdown.style.display === '') {
        dropdown.style.display = 'block';
      } else {
        dropdown.style.display = 'none';
      }
   });

    // Close the dropdown if the user clicks outside of it
    window.addEventListener('click', function(event) {
      const dropdown = document.getElementById('filter-dropdown');
      if (!event.target.matches('#filter-button')) {
        if (dropdown.style.display === 'block') {
          dropdown.style.display = 'none';
        }
      }
    });

  </script>
</body>
</html>
